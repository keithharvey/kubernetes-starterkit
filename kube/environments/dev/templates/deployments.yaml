apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: nginx
          image: {nginx-static-proxy}
          imagePullPolicy: Never
          volumeMounts:
            - mountPath: /etc/nginx/html/
              name: static-serve-dir
          ports:
            - name: http
              protocol: TCP
              containerPort: 80
              hostPort: 80
            - name: https
              protocol: TCP
              containerPort: 443
              hostPort: 443
        - name: flask
          image: {flask-api}
          imagePullPolicy: Never
          volumeMounts:
            - mountPath: /usr/src/app/
              name: flask-src
          env:
            - name: POSTGRES_DATABASE
              value: postgres
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
            - name: SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: session-secret
                  key: session-secret
          ports:
            - name: tcp
              protocol: TCP
              containerPort: 8000

      volumes:
        - name: static-serve-dir
          hostPath:
            path: {PROJECT_ROOT}/app/nginx/serve/
        - name: flask-src
          hostPath:
            path: {PROJECT_ROOT}/app/api/

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: database
  labels:
    app: database
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
        - name: postgres
          image: postgres
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
          ports:
            - name: tcp
              protocol: TCP
              containerPort: 5432
              hostPort: 5432
